import {
  appendErrors,
  get,
  set
} from "./chunk-CHTF7R2K.js";
import "./chunk-JRNM5MJ2.js";
import "./chunk-DFKQJ226.js";

// ../node_modules/@hookform/resolvers/dist/resolvers.module.js
var e = function(i, e2, t2) {
  if (i && "reportValidity" in i) {
    var f2 = get(t2, e2);
    i.setCustomValidity(f2 && f2.message || ""), i.reportValidity();
  }
};
var t = function(r, i) {
  var t2 = function(t3) {
    var f3 = i.fields[t3];
    f3 && f3.ref && "reportValidity" in f3.ref ? e(f3.ref, t3, r) : f3.refs && f3.refs.forEach(function(i2) {
      return e(i2, t3, r);
    });
  };
  for (var f2 in i.fields)
    t2(f2);
};
var f = function(e2, f2) {
  f2.shouldUseNativeValidation && t(e2, f2);
  var o = {};
  for (var a in e2) {
    var n2 = get(f2.fields, a);
    set(o, a, Object.assign(e2[a], { ref: n2 && n2.ref }));
  }
  return o;
};

// ../node_modules/@hookform/resolvers/joi/dist/joi.module.js
var n = function(n2, o, a) {
  return void 0 === o && (o = { abortEarly: false }), void 0 === a && (a = {}), function(i, s, u) {
    try {
      var c = function() {
        return l.error ? { values: {}, errors: f((n3 = l.error, o2 = !u.shouldUseNativeValidation && "all" === u.criteriaMode, n3.details.length ? n3.details.reduce(function(r, t2) {
          var n4 = t2.path.join(".");
          if (r[n4] || (r[n4] = { message: t2.message, type: t2.type }), o2) {
            var a2 = r[n4].types, i2 = a2 && a2[t2.type];
            r[n4] = appendErrors(n4, o2, r, t2.type, i2 ? [].concat(i2, t2.message) : t2.message);
          }
          return r;
        }, {}) : {}), u) } : (u.shouldUseNativeValidation && t({}, u), { errors: {}, values: l.value });
        var n3, o2;
      }, v = Object.assign({}, o, { context: s }), l = {}, f2 = function() {
        if ("sync" === a.mode)
          l = n2.validate(i, v);
        else {
          var e2 = function(e3, r) {
            try {
              var t2 = e3();
            } catch (e4) {
              return r(e4);
            }
            return t2 && t2.then ? t2.then(void 0, r) : t2;
          }(function() {
            return Promise.resolve(n2.validateAsync(i, v)).then(function(e3) {
              l.value = e3;
            });
          }, function(e3) {
            l.error = e3;
          });
          if (e2 && e2.then)
            return e2.then(function() {
            });
        }
      }();
      return Promise.resolve(f2 && f2.then ? f2.then(c) : c());
    } catch (e2) {
      return Promise.reject(e2);
    }
  };
};
export {
  n as joiResolver
};
//# sourceMappingURL=@hookform_resolvers_joi.js.map
